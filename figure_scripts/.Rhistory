sample_size <- 100
tree_sample <- sample(unique(contrasts_dataframe$tree), sample_size, replace = F)
pl <- ggplot(contrasts_dataframe, aes(x = S5F_WS_contrast)) +
xlab('Change in S5F mutability') +
ylab('Density') +
ggplot_theme +
scale_y_continuous(expand = c(0,0), limits = c(0,80))
for(tree in tree_sample){
x <- contrasts_dataframe[contrasts_dataframe$tree == tree,
'S5F_WS_contrast']
temp_dataframe <- data.frame(x)
#pl <- pl + geom_histogram(data=temp_dataframe,aes(x=x), fill = 'white',
#colour = 'black',alpha = 0.3)
pl <- pl + geom_density(data=temp_dataframe,aes(x=x), fill = 'white',
colour = 'black',alpha = 0.1, size = 0.1)
}
pl <- pl + geom_vline(xintercept = 0, linetype = 2, size = 0.2)
# plot means on top of histograms as vertical red lines
# Get distribuiton of the fraction of negative changes
fraction_negative <- c()
contrast_means <- c()
for(tree in unique(contrasts_dataframe$tree)[1:1000]){
x <- contrasts_dataframe[contrasts_dataframe$tree == tree,
'S5F_WS_contrast']
contrast_means <- c(contrast_means, mean(x))
if(tree %in% tree_sample){
mean_value <- mean(x)
pl <- pl + geom_vline(xintercept = mean_value, colour = 'red',
alpha = 0.3, size = 0.1)
}
# Get overall fraction of negative changes (disregarding 0s)
if(length(x[x!=0]) > 0){
fraction_negative <- c(fraction_negative,sum(x[x!=0]<0)/length(x[x!=0]))
}else{
fraction_negative <- c(fraction_negative, NA)
}
}
# Get average mean contrast (and HPD)
means_dat <- data.frame(contrast_means)
means_HPD_limits <- HPDinterval(as.mcmc(means_dat$contrast_means), 0.95)
means_llim <- means_HPD_limits[1]
means_ulim <- means_HPD_limits[2]
temp_dataframe <- data.frame(fraction_negative)
fraction_HPD_limits <- HPDinterval(as.mcmc(temp_dataframe[, 1]), 0.95)
fraction_llim <- fraction_HPD_limits[1]
fraction_ulim <- fraction_HPD_limits[2]
# Add inset plot showing distribuiton of changes that are negative (disregarding 0s):
dat <- with(density(temp_dataframe$fraction_negative,na.rm=T), data.frame(x, y)) +
subpl <- ggplot(data=dat, aes(x = x)) + theme_classic() + xlab('Fraction of mutability losses')
limit_factor <- max(abs(0.5 - max(dat$x)),
abs(0.5 - min(dat$x)))
subpl <- subpl +
geom_area(data = dat, mapping = aes(x = ifelse(x>fraction_llim & x< fraction_ulim , x, 0),y), fill = "grey",alpha = 0.5) +
geom_line(data = dat, mapping = aes(x = x, y = y),size=0.3) +
scale_y_continuous(expand = c(0,0.01), limits = c(0,1.1*max(dat$y))) +
geom_vline(xintercept=mean(fraction_negative,na.rm=T), size = 0.3,colour='red') +
xlim(c(0.3,0.7)) +
geom_vline(xintercept = 0.5, linetype=2, size = 0.3) +
ylab('Density') +
theme(axis.text=element_text(size=x_axis_text_size_subplot),
axis.title=element_text(size=axis_title_size_subplot, margin = margin(0,0,0,0)),
axis.line.x = element_line(colour="black", size = 0.3),
axis.line.y = element_line(colour="black",  size = 0.3),
plot.title = element_text(size=2)
)
# Plotting...
vp <- viewport(width = 0.4, height = 0.4, x = 0.14,
y = unit(8, "lines"), just = c("left",
"bottom"))
pdf('CH103_overview_S5F_contrasts.pdf', width=3.43, height = 3)
plot(pl)
plot(subpl, vp = vp)
dev.off()
vp <- viewport(width = 0.4, height = 0.4, x = 0.14,
y = unit(5, "lines"), just = c("left",
"bottom"))
pdf('CH103_overview_S5F_contrasts.pdf', width=3.43, height = 3)
plot(pl)
plot(subpl, vp = vp)
dev.off()
vp <- viewport(width = 0.4, height = 0.4, x = 0.14,
y = unit(3, "lines"), just = c("left",
"bottom"))
pdf('CH103_overview_S5F_contrasts.pdf', width=3.43, height = 3)
plot(pl)
plot(subpl, vp = vp)
dev.off()
subpl <- ggplot(data=dat, aes(x = x)) + theme_classic() + xlab('Fraction of mutability losses')
limit_factor <- max(abs(0.5 - max(dat$x)),
abs(0.5 - min(dat$x)))
subpl <- subpl +
geom_area(data = dat, mapping = aes(x = ifelse(x>fraction_llim & x< fraction_ulim , x, 0),y), fill = "grey",alpha = 0.5) +
geom_line(data = dat, mapping = aes(x = x, y = y),size=0.3) +
scale_y_continuous(expand = c(0,0.01), limits = c(0,1.1*max(dat$y))) +
geom_vline(xintercept=mean(fraction_negative,na.rm=T), size = 0.3,colour='red') +
xlim(c(0.3,0.7)) +
geom_vline(xintercept = 0.5, linetype=2, size = 0.3) +
ylab('Density') +
theme(axis.text=element_text(size=x_axis_text_size_subplot),
axis.title=element_text(size=axis_title_size_subplot, margin = margin(0,0,0,0)),
axis.line.x = element_line(colour="black", size = 0.3),
axis.line.y = element_line(colour="black",  size = 0.3),
plot.title = element_text(size=2)
)
# Plotting...
vp <- viewport(width = 0.4, height = 0.4, x = 0.14,
y = unit(3, "lines"), just = c("left",
"bottom"))
pdf('CH103_overview_S5F_contrasts.pdf', width=3.43, height = 3)
plot(pl)
plot(subpl, vp = vp)
dev.off()
# Sample of 100 trees
sample_size <- 100
tree_sample <- sample(unique(contrasts_dataframe$tree), sample_size, replace = F)
pl <- ggplot(contrasts_dataframe, aes(x = S5F_WS_contrast)) +
xlab('Change in S5F mutability') +
ylab('Density') +
ggplot_theme +
scale_y_continuous(expand = c(0,0), limits = c(0,80))
for(tree in tree_sample){
x <- contrasts_dataframe[contrasts_dataframe$tree == tree,
'S5F_WS_contrast']
temp_dataframe <- data.frame(x)
#pl <- pl + geom_histogram(data=temp_dataframe,aes(x=x), fill = 'white',
#colour = 'black',alpha = 0.3)
pl <- pl + geom_density(data=temp_dataframe,aes(x=x), fill = 'white',
colour = 'black',alpha = 0.1, size = 0.1)
}
pl <- pl + geom_vline(xintercept = 0, linetype = 2, size = 0.2)
# plot means on top of histograms as vertical red lines
# Get distribuiton of the fraction of negative changes
fraction_negative <- c()
contrast_means <- c()
for(tree in unique(contrasts_dataframe$tree)[1:1000]){
x <- contrasts_dataframe[contrasts_dataframe$tree == tree,
'S5F_WS_contrast']
contrast_means <- c(contrast_means, mean(x))
if(tree %in% tree_sample){
mean_value <- mean(x)
pl <- pl + geom_vline(xintercept = mean_value, colour = 'red',
alpha = 0.3, size = 0.1)
}
# Get overall fraction of negative changes (disregarding 0s)
if(length(x[x!=0]) > 0){
fraction_negative <- c(fraction_negative,sum(x[x!=0]<0)/length(x[x!=0]))
}else{
fraction_negative <- c(fraction_negative, NA)
}
}
# Get average mean contrast (and HPD)
means_dat <- data.frame(contrast_means)
means_HPD_limits <- HPDinterval(as.mcmc(means_dat$contrast_means), 0.95)
means_llim <- means_HPD_limits[1]
means_ulim <- means_HPD_limits[2]
temp_dataframe <- data.frame(fraction_negative)
fraction_HPD_limits <- HPDinterval(as.mcmc(temp_dataframe[, 1]), 0.95)
fraction_llim <- fraction_HPD_limits[1]
fraction_ulim <- fraction_HPD_limits[2]
# Add inset plot showing distribuiton of changes that are negative (disregarding 0s):
dat <- with(density(temp_dataframe$fraction_negative,na.rm=T), data.frame(x, y)) +
subpl <- ggplot(data=dat, aes(x = x)) + theme_classic() + xlab('Fraction of mutability losses')
limit_factor <- max(abs(0.5 - max(dat$x)),
abs(0.5 - min(dat$x)))
subpl <- subpl +
geom_area(data = dat, mapping = aes(x = ifelse(x>fraction_llim & x< fraction_ulim , x, 0),y), fill = "grey",alpha = 0.5) +
geom_line(data = dat, mapping = aes(x = x, y = y),size=0.3) +
scale_y_continuous(expand = c(0,0.01), limits = c(0,1.1*max(dat$y))) +
geom_vline(xintercept=mean(fraction_negative,na.rm=T), size = 0.3,colour='red') +
xlim(c(0.3,0.7)) +
geom_vline(xintercept = 0.5, linetype=2, size = 0.3) +
ylab('Density') +
theme(axis.text=element_text(size=x_axis_text_size_subplot),
axis.title=element_text(size=axis_title_size_subplot, margin = margin(0,0,0,0)),
axis.line.x = element_line(colour="black", size = 0.3),
axis.line.y = element_line(colour="black",  size = 0.3),
plot.title = element_text(size=2)
)
pl <- ggplot(contrasts_dataframe, aes(x = S5F_WS_contrast)) +
xlab('Change in S5F mutability') +
ylab('Density') +
ggplot_theme +
scale_y_continuous(expand = c(0,0), limits = c(0,80))
for(tree in tree_sample){
x <- contrasts_dataframe[contrasts_dataframe$tree == tree,
'S5F_WS_contrast']
temp_dataframe <- data.frame(x)
#pl <- pl + geom_histogram(data=temp_dataframe,aes(x=x), fill = 'white',
#colour = 'black',alpha = 0.3)
pl <- pl + geom_density(data=temp_dataframe,aes(x=x), fill = 'white',
colour = 'black',alpha = 0.1, size = 0.1)
}
pl <- pl + geom_vline(xintercept = 0, linetype = 2, size = 0.2)
# plot means on top of histograms as vertical red lines
# Get distribuiton of the fraction of negative changes
fraction_negative <- c()
contrast_means <- c()
for(tree in unique(contrasts_dataframe$tree)[1:1000]){
x <- contrasts_dataframe[contrasts_dataframe$tree == tree,
'S5F_WS_contrast']
contrast_means <- c(contrast_means, mean(x))
if(tree %in% tree_sample){
mean_value <- mean(x)
pl <- pl + geom_vline(xintercept = mean_value, colour = 'red',
alpha = 0.3, size = 0.1)
}
# Get overall fraction of negative changes (disregarding 0s)
if(length(x[x!=0]) > 0){
fraction_negative <- c(fraction_negative,sum(x[x!=0]<0)/length(x[x!=0]))
}else{
fraction_negative <- c(fraction_negative, NA)
}
}
# Get average mean contrast (and HPD)
means_dat <- data.frame(contrast_means)
means_HPD_limits <- HPDinterval(as.mcmc(means_dat$contrast_means), 0.95)
means_llim <- means_HPD_limits[1]
means_ulim <- means_HPD_limits[2]
temp_dataframe <- data.frame(fraction_negative)
fraction_HPD_limits <- HPDinterval(as.mcmc(temp_dataframe[, 1]), 0.95)
fraction_llim <- fraction_HPD_limits[1]
fraction_ulim <- fraction_HPD_limits[2]
# Add inset plot showing distribuiton of changes that are negative (disregarding 0s):
dat <- with(density(temp_dataframe$fraction_negative,na.rm=T), data.frame(x, y))
subpl <- ggplot(data=dat, aes(x = x)) + theme_classic() + xlab('Fraction of mutability losses')
limit_factor <- max(abs(0.5 - max(dat$x)),
abs(0.5 - min(dat$x)))
subpl <- subpl +
geom_area(data = dat, mapping = aes(x = ifelse(x>fraction_llim & x< fraction_ulim , x, 0),y), fill = "grey",alpha = 0.5) +
geom_line(data = dat, mapping = aes(x = x, y = y),size=0.3) +
scale_y_continuous(expand = c(0,0.01), limits = c(0,1.1*max(dat$y))) +
geom_vline(xintercept=mean(fraction_negative,na.rm=T), size = 0.3,colour='red') +
xlim(c(0.3,0.7)) +
geom_vline(xintercept = 0.5, linetype=2, size = 0.3) +
ylab('Density') +
theme(axis.text=element_text(size=x_axis_text_size_subplot),
axis.title=element_text(size=axis_title_size_subplot, margin = margin(0,0,0,0)),
axis.line.x = element_line(colour="black", size = 0.3),
axis.line.y = element_line(colour="black",  size = 0.3),
plot.title = element_text(size=2)
)
# Plotting...
vp <- viewport(width = 0.4, height = 0.4, x = 0.14,
y = unit(3, "lines"), just = c("left",
"bottom"))
pdf('CH103_overview_S5F_contrasts.pdf', width=3.43, height = 3)
plot(pl)
plot(subpl, vp = vp)
dev.off()
vp <- viewport(width = 0.4, height = 0.4, x = 0.16,
y = unit(5, "lines"), just = c("left",
"bottom"))
pdf('CH103_overview_S5F_contrasts.pdf', width=3.43, height = 3)
plot(pl)
plot(subpl, vp = vp)
dev.off()
vp <- viewport(width = 0.38, height = 0.38, x = 0.17,
y = unit(7, "lines"), just = c("left",
"bottom"))
pdf('CH103_overview_S5F_contrasts.pdf', width=3.43, height = 3)
plot(pl)
plot(subpl, vp = vp)
dev.off()
vp <- viewport(width = 0.38, height = 0.38, x = 0.19,
y = unit(7, "lines"), just = c("left",
"bottom"))
pdf('CH103_overview_S5F_contrasts.pdf', width=3.43, height = 3)
plot(pl)
vp <- viewport(width = 0.38, height = 0.38, x = 0.19,
y = unit(9, "lines"), just = c("left",
"bottom"))
pdf('CH103_overview_S5F_contrasts.pdf', width=3.43, height = 3)
plot(pl)
plot(subpl, vp = vp)
dev.off()
vp <- viewport(width = 0.38, height = 0.38, x = 0.19,
y = unit(8, "lines"), just = c("left",
"bottom"))
pdf('CH103_overview_S5F_contrasts.pdf', width=3.43, height = 3)
plot(pl)
plot(subpl, vp = vp)
dev.off()
vp <- viewport(width = 0.38, height = 0.38, x = 0.185,
y = unit(8.5, "lines"), just = c("left",
"bottom"))
pdf('CH103_overview_S5F_contrasts.pdf', width=3.43, height = 3)
plot(pl)
plot(subpl, vp = vp)
dev.off()
rm(list=ls(all=T))
# Produces figure for the manuscript showing the distribution of the fraction of negative changes in S5F
# Uses the following MCMC chains: CH103_con_run1a, CH103L_con_run1a, VRC26int_con_run1a, VRC26L_con_run1a, VRC01_01_log_run1a, VRC01_13_log_run1a, VRC01_19_log_run1a,
library('ggplot2')
library('reshape')
library('gridExtra')
library('grid')
library('coda')
library('lattice')
library('gridBase')
results_directory <- '../../results/contrasts/observed_lineages/'
# ======= GET DATAFRAMES WITH FRACTION NEGATIVE LOSSES FROM ALL LINEAGES
CH103_dataframe <- read.table(paste(results_directory, 'CH103_constant/CH103_con_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
CH103L_dataframe <- read.table(paste(results_directory, 'CH103L_constant/CH103L_con_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
VRC26int_dataframe <- read.table(paste(results_directory, 'VRC26int_constant/VRC26int_con_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
VRC26L_dataframe <- read.table(paste(results_directory, 'VRC26L_constant/VRC26L_con_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
VRC01_01_dataframe <- read.table(paste(results_directory, 'VRC01_01_logistic/VRC01_01_log_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
VRC01_13_dataframe <- read.table(paste(results_directory, 'VRC01_13_logistic/VRC01_13_log_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
VRC01_19_dataframe <- read.table(paste(results_directory, 'VRC01_19_logistic/VRC01_19_log_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
dataframe_list <- list('CH103' = CH103_dataframe, 'CH103L' = CH103L_dataframe,
'VRC26int' = VRC26int_dataframe, 'VRC26L' = VRC26L_dataframe,
'VRC01_01' = VRC01_01_dataframe, 'VRC01_13' = VRC01_13_dataframe,
'VRC01_19' = VRC01_19_dataframe)
CH103_dataframe <- read.table(paste(results_directory, 'CH103_constant/CH103_con_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
library('ggplot2')
library('reshape')
library('gridExtra')
library('grid')
library('coda')
library('lattice')
library('gridBase')
library('ggplot2')
library('reshape')
library('grid')
library('coda')
library('lattice')
library('ggplot2')
library('grid')
library('coda')
library('lattice')
results_directory <- '/../results/contrasts/observed_lineages/'
CH103_dataframe <- read.table(paste(results_directory, 'CH103_constant/CH103_con_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
CH103L_dataframe <- read.table(paste(results_directory, 'CH103L_constant/CH103L_con_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
VRC26int_dataframe <- read.table(paste(results_directory, 'VRC26int_constant/VRC26int_con_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
VRC26L_dataframe <- read.table(paste(results_directory, 'VRC26L_constant/VRC26L_con_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
VRC01_01_dataframe <- read.table(paste(results_directory, 'VRC01_01_logistic/VRC01_01_log_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
VRC01_13_dataframe <- read.table(paste(results_directory, 'VRC01_13_logistic/VRC01_13_log_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
VRC01_19_dataframe <- read.table(paste(results_directory, 'VRC01_19_logistic/VRC01_19_log_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
results_directory <- '../results/contrasts/observed_lineages/'
# ======= GET DATAFRAMES WITH FRACTION NEGATIVE LOSSES FROM ALL LINEAGES
CH103_dataframe <- read.table(paste(results_directory, 'CH103_constant/CH103_con_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
CH103L_dataframe <- read.table(paste(results_directory, 'CH103L_constant/CH103L_con_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
VRC26int_dataframe <- read.table(paste(results_directory, 'VRC26int_constant/VRC26int_con_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
VRC26L_dataframe <- read.table(paste(results_directory, 'VRC26L_constant/VRC26L_con_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
VRC01_01_dataframe <- read.table(paste(results_directory, 'VRC01_01_logistic/VRC01_01_log_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
VRC01_13_dataframe <- read.table(paste(results_directory, 'VRC01_13_logistic/VRC01_13_log_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
VRC01_19_dataframe <- read.table(paste(results_directory, 'VRC01_19_logistic/VRC01_19_log_run1a_mutability_contrasts.csv', sep = ''), header = T, sep = ',')
dataframe_list <- list('CH103' = CH103_dataframe, 'CH103L' = CH103L_dataframe,
'VRC26int' = VRC26int_dataframe, 'VRC26L' = VRC26L_dataframe,
'VRC01_01' = VRC01_01_dataframe, 'VRC01_13' = VRC01_13_dataframe,
'VRC01_19' = VRC01_19_dataframe)
{
title_size <- 20
axis_title_size <- 22
y_axis_text_size <- 16
x_axis_text_size <- 10
axis_title_size_subplot <- 20
y_axis_text_size_subplot <- 15
x_axis_text_size_subplot <- 16
ylab_distance <- 20
xlab_distance <- 22
plot_margins <- c(0.3, 1, 0.3, 2)
lineage_names <- c(
'CH103' = "CH103 (H)",
'CH103L' = "CH103 (L)",
'VRC26' = "VRC26 (H)",
'VRC26L' = "VRC26 (L)",
'VRC01_13' = 'VRC01-13 (H)',
'VRC01_01' = 'VRC01-01 (H)',
'VRC01_19' = 'VRC01-19 (H)'
)
}
# ==== MAKE DATAFRAME WITH FRACTION OF NEGATIVE CHANGES FOR EACH TREE, LINEAGE, REGION AND METRIC
fraction_negative_all <- c()
fraction_negative_terminal <- c()
fraction_negative_internal <- c()
fraction_negative_trunk <- c()
fraction_negative_nontrunk <- c()
lineage <- c()
region_column <- c()
metric_column <- c()
#branch_is_terminal <- c()
for(clone in c('CH103','CH103L','VRC26int','VRC26L','VRC01_01','VRC01_13','VRC01_19')){
#for(clone in c('CH103','CH103L','VRC26L','VRC01_01','VRC01_13','VRC01_19')){
clone_dataframe <- dataframe_list[[clone]]
print(clone)
#For each tree from the posterior distribution for the clone:
for(tree in unique(dataframe_list[[clone]]$tree)[1:1000]){
# For each metric
for(metric in c('S5F','HS','OHS')){
# For each region
for(region in c('WS','FR','CDR')){
#print(paste(clone,metric,region,tree))
# Find contrasts for the specified metric and region
contrasts_all <- clone_dataframe[clone_dataframe$tree == tree,paste(metric,'_',region,'_contrast',sep='')]
contrasts_terminal <- clone_dataframe[clone_dataframe$tree == tree & clone_dataframe$branch_is_terminal == T,
paste(metric,'_',region,'_contrast',sep='')]
# Contrast for all internal branches (both trunk and non-trunk)
contrasts_internal <- clone_dataframe[clone_dataframe$tree == tree & clone_dataframe$branch_is_terminal == F,
paste(metric,'_',region,'_contrast',sep='')]
contrasts_trunk <- clone_dataframe[clone_dataframe$tree == tree & clone_dataframe$branch_in_trunk == T,
paste(metric,'_',region,'_contrast',sep='')]
# Contrasts for branches that are internal but not in the trunk
contrasts_nontrunk <- clone_dataframe[clone_dataframe$tree == tree & clone_dataframe$branch_in_trunk == F &
clone_dataframe$branch_is_terminal == F,
paste(metric,'_',region,'_contrast',sep='')]
f_negative_all <- sum(contrasts_all < 0) / sum(contrasts_all != 0)
f_negative_terminal <- sum(contrasts_terminal < 0) / sum(contrasts_terminal != 0)
f_negative_internal <- sum(contrasts_internal < 0) / sum(contrasts_internal != 0)
f_negative_trunk <- sum(contrasts_trunk < 0) / sum(contrasts_trunk != 0)
f_negative_nontrunk <- sum(contrasts_nontrunk < 0) / sum(contrasts_nontrunk != 0)
fraction_negative_all <- c(fraction_negative_all, f_negative_all)
fraction_negative_terminal <- c(fraction_negative_terminal, f_negative_terminal)
fraction_negative_internal <- c(fraction_negative_internal, f_negative_internal)
fraction_negative_trunk <- c(fraction_negative_trunk, f_negative_trunk)
fraction_negative_nontrunk <- c(fraction_negative_nontrunk, f_negative_nontrunk)
lineage <- c(lineage, clone)
metric_column <- c(metric_column, metric)
region_column <- c(region_column, region)
}
}
}
}
lineage <- factor(lineage, levels = c('CH103','CH103L','VRC26int','VRC26L','VRC01_13',
'VRC01_01','VRC01_19'))
metric_column <- factor(metric_column, levels = c('S5F','HS','OHS'))
region_column <- factor(region_column, levels = c('WS','FR','CDR'))
global_dataframe <- data.frame(fraction_negative_all = fraction_negative_all, fraction_negative_terminal = fraction_negative_terminal,
fraction_negative_internal = fraction_negative_internal, fraction_negative_trunk = fraction_negative_trunk,
fraction_negative_nontrunk = fraction_negative_nontrunk, lineage = lineage,
region = region_column, metric = metric_column)
# ==== MAKE DATAFRAME WITH MEAN FRACTION NEG. AND HPD LIMITS FOR EACH LINEAGE, METRIC AND REGION
mean_fraction_negative_all <- c()
mean_fraction_negative_terminal <- c()
mean_fraction_negative_internal <- c()
mean_fraction_negative_trunk <- c()
mean_fraction_negative_nontrunk <- c()
lineage <- c()
metric_column <- c()
region_column <- c()
HPD_llim_all <- c()
HPD_ulim_all <- c()
HPD_llim_terminal <- c()
HPD_ulim_terminal <- c()
HPD_llim_internal <- c()
HPD_ulim_internal <- c()
HPD_ulim_trunk <- c()
HPD_llim_trunk <- c()
HPD_ulim_nontrunk <- c()
HPD_llim_nontrunk <- c()
for(clone in c('CH103','CH103L','VRC26int','VRC26L','VRC01_01','VRC01_13','VRC01_19')){
#for(clone in c('CH103','CH103L','VRC26L','VRC01_01','VRC01_13','VRC01_19')){
for(metric in c('S5F','HS','OHS')){
for(region in c('WS','FR','CDR')){
values_all <- global_dataframe$fraction_negative_all[global_dataframe$lineage == clone &
global_dataframe$region == region &
global_dataframe$metric == metric]
values_terminal <- global_dataframe$fraction_negative_terminal[global_dataframe$lineage == clone &
global_dataframe$region == region &
global_dataframe$metric == metric]
values_internal <- global_dataframe$fraction_negative_internal[global_dataframe$lineage == clone &
global_dataframe$region == region &
global_dataframe$metric == metric]
values_trunk <- global_dataframe$fraction_negative_trunk[global_dataframe$lineage == clone &
global_dataframe$region == region &
global_dataframe$metric == metric]
values_nontrunk <- global_dataframe$fraction_negative_nontrunk[global_dataframe$lineage == clone &
global_dataframe$region == region &
global_dataframe$metric == metric]
# Mean fraction
mean_fraction_negative_all <- c(mean_fraction_negative_all, mean(values_all,na.rm=T))
mean_fraction_negative_terminal <- c(mean_fraction_negative_terminal, mean(values_terminal,na.rm=T))
mean_fraction_negative_internal <- c(mean_fraction_negative_internal, mean(values_internal,na.rm=T))
mean_fraction_negative_trunk <- c(mean_fraction_negative_trunk, mean(values_trunk,na.rm=T))
mean_fraction_negative_nontrunk <- c(mean_fraction_negative_nontrunk, mean(values_nontrunk,na.rm=T))
# Temporary sub-dataframes for computing HPD interval
sub_dat_all <- data.frame(values_all)
fraction_HPD_limits_all <- HPDinterval(as.mcmc(sub_dat_all$values_all), 0.95)
HPD_llim_all <- c(HPD_llim_all, fraction_HPD_limits_all[1])
HPD_ulim_all <- c(HPD_ulim_all, fraction_HPD_limits_all[2])
sub_dat_terminal <- data.frame(values_terminal)
fraction_HPD_limits_terminal <- HPDinterval(as.mcmc(sub_dat_terminal$values_terminal), 0.95)
HPD_llim_terminal <- c(HPD_llim_terminal, fraction_HPD_limits_terminal[1])
HPD_ulim_terminal <- c(HPD_ulim_terminal, fraction_HPD_limits_terminal[2])
sub_dat_internal <- data.frame(values_internal)
fraction_HPD_limits_internal <- HPDinterval(as.mcmc(sub_dat_internal$values_internal), 0.95)
HPD_llim_internal <- c(HPD_llim_internal, fraction_HPD_limits_internal[1])
HPD_ulim_internal <- c(HPD_ulim_internal, fraction_HPD_limits_internal[2])
sub_dat_trunk <- data.frame(values_trunk)
fraction_HPD_limits_trunk <- HPDinterval(as.mcmc(sub_dat_trunk$values_trunk), 0.95)
HPD_llim_trunk <- c(HPD_llim_trunk, fraction_HPD_limits_trunk[1])
HPD_ulim_trunk <- c(HPD_ulim_trunk, fraction_HPD_limits_trunk[2])
sub_dat_nontrunk <- data.frame(values_nontrunk)
fraction_HPD_limits_nontrunk <- HPDinterval(as.mcmc(sub_dat_nontrunk$values_nontrunk), 0.95)
HPD_llim_nontrunk <- c(HPD_llim_nontrunk, fraction_HPD_limits_nontrunk[1])
HPD_ulim_nontrunk <- c(HPD_ulim_nontrunk, fraction_HPD_limits_nontrunk[2])
metric_column <- c(metric_column, metric)
region_column <- c(region_column, region)
lineage <- c(lineage, clone)
}
}
}
lineage <- factor(lineage, levels = c('CH103','CH103L','VRC26int','VRC26L','VRC01_13',
'VRC01_01','VRC01_19'))
metric_column <- factor(metric_column, levels = c('S5F','HS','OHS'))
region_column <- factor(region_column, levels = c('WS','FR','CDR'))
summary_dataframe <- data.frame(lineage,metric=metric_column,region=region_column,
mean_fraction_negative_all,HPD_llim_all,HPD_ulim_all,
mean_fraction_negative_terminal,HPD_llim_terminal,HPD_ulim_terminal,
mean_fraction_negative_internal,HPD_llim_internal,HPD_ulim_internal,
mean_fraction_negative_trunk,HPD_llim_trunk,HPD_ulim_trunk,
mean_fraction_negative_nontrunk,HPD_llim_nontrunk,HPD_ulim_nontrunk)
save.image("/Volumes/cobey/mvieira/evolution_of_mutability/figure_scripts/contrasts.RData")
