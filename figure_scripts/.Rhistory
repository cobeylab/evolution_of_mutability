lines(N2_exact[1:400], type = 'l', col = 'red')
plot(N_exact,N2_exact)
N_exact <- c(1)
N2_exact <- c(1.0001)
r <- 2.9
K <- 3000
tmax <- 2000
for(t in 2:tmax){
N[t] <- round(N[t - 1] + r * N[t-1] * (1 - N[t-1]/K))
N_exact[t] <- (N_exact[t - 1] + r * N_exact[t-1] * (1 - N_exact[t-1]/K))
N2_exact[t] <- (N2_exact[t - 1] + r * N2_exact[t-1] * (1 - N2_exact[t-1]/K))
}
plot(N_exact[1:400], type = 'l')
lines(N2_exact[1:400], type = 'l', col = 'red')
plot(N_exact,N2_exact)
N <- c(1)
N_exact <- c(1)
N2_exact <- c(1.0001)
r <- 2.9
K <- 4000
tmax <- 2000
for(t in 2:tmax){
N[t] <- round(N[t - 1] + r * N[t-1] * (1 - N[t-1]/K))
N_exact[t] <- (N_exact[t - 1] + r * N_exact[t-1] * (1 - N_exact[t-1]/K))
N2_exact[t] <- (N2_exact[t - 1] + r * N2_exact[t-1] * (1 - N2_exact[t-1]/K))
}
plot(N_exact[1:400], type = 'l')
lines(N2_exact[1:400], type = 'l', col = 'red')
plot(N_exact,N2_exact)
N <- c(1)
N_exact <- c(1)
N2_exact <- c(1.0001)
r <- 2.9
K <- 4000
tmax <- 2000
for(t in 2:tmax){
N[t] <- round(N[t - 1] + r * N[t-1] * (1 - N[t-1]/K))
N_exact[t] <- (N_exact[t - 1] + r * N_exact[t-1] * (1 - N_exact[t-1]/K))
N2_exact[t] <- (N2_exact[t - 1] + r * N2_exact[t-1] * (1 - N2_exact[t-1]/K))
}
plot(N_exact[1:400], type = 'l')
lines(N2_exact[1:400], type = 'l', col = 'red')
plot(N_exact,N2_exact,ylim = c(0,4000),xlim =c(0,4000))
N <- c(1)
N_exact <- c(1)
N2_exact <- c(1.0001)
r <- 2.9
K <- 3000
tmax <- 2000
for(t in 2:tmax){
N[t] <- round(N[t - 1] + r * N[t-1] * (1 - N[t-1]/K))
N_exact[t] <- (N_exact[t - 1] + r * N_exact[t-1] * (1 - N_exact[t-1]/K))
N2_exact[t] <- (N2_exact[t - 1] + r * N2_exact[t-1] * (1 - N2_exact[t-1]/K))
}
plot(N_exact[1:400], type = 'l')
lines(N2_exact[1:400], type = 'l', col = 'red')
plot(N_exact,N2_exact,ylim = c(0,4000),xlim =c(0,4000))
N <- c(1)
N_exact <- c(1)
N2_exact <- c(1.0001)
r <- 2.9
K <- 1000
tmax <- 2000
for(t in 2:tmax){
N[t] <- round(N[t - 1] + r * N[t-1] * (1 - N[t-1]/K))
N_exact[t] <- (N_exact[t - 1] + r * N_exact[t-1] * (1 - N_exact[t-1]/K))
N2_exact[t] <- (N2_exact[t - 1] + r * N2_exact[t-1] * (1 - N2_exact[t-1]/K))
}
plot(N_exact[1:400], type = 'l')
lines(N2_exact[1:400], type = 'l', col = 'red')
plot(N_exact,N2_exact,ylim = c(0,4000),xlim =c(0,4000))
N <- c(1)
N_exact <- c(1)
N2_exact <- c(1.0001)
r <- 2.9
K <- 2000
tmax <- 2000
for(t in 2:tmax){
N[t] <- round(N[t - 1] + r * N[t-1] * (1 - N[t-1]/K))
N_exact[t] <- (N_exact[t - 1] + r * N_exact[t-1] * (1 - N_exact[t-1]/K))
N2_exact[t] <- (N2_exact[t - 1] + r * N2_exact[t-1] * (1 - N2_exact[t-1]/K))
}
points(N_exact,N2_exact,ylim = c(0,4000),xlim =c(0,4000), col = 'red')
N <- c(1)
N_exact <- c(1)
N2_exact <- c(1.0001)
r <- 2.9
K <- 3000
tmax <- 2000
for(t in 2:tmax){
N[t] <- round(N[t - 1] + r * N[t-1] * (1 - N[t-1]/K))
N_exact[t] <- (N_exact[t - 1] + r * N_exact[t-1] * (1 - N_exact[t-1]/K))
N2_exact[t] <- (N2_exact[t - 1] + r * N2_exact[t-1] * (1 - N2_exact[t-1]/K))
}
points(N_exact,N2_exact,ylim = c(0,4000),xlim =c(0,4000), col = 'blue')
lines(N_exact,N2_exact,ylim = c(0,4000),xlim =c(0,4000), col = 'blue')
N_exact <- c(1)
N2_exact <- c(1.0001)
r <- 2.9
K <- 1000
tmax <- 2000
for(t in 2:tmax){
N[t] <- round(N[t - 1] + r * N[t-1] * (1 - N[t-1]/K))
N_exact[t] <- (N_exact[t - 1] + r * N_exact[t-1] * (1 - N_exact[t-1]/K))
N2_exact[t] <- (N2_exact[t - 1] + r * N2_exact[t-1] * (1 - N2_exact[t-1]/K))
}
lines(N_exact,N2_exact,ylim = c(0,4000),xlim =c(0,4000), col = 'black')
N <- c(1)
N_exact <- c(1)
N2_exact <- c(1.0001)
r <- 2.9
K <- 2000
tmax <- 2000
for(t in 2:tmax){
N[t] <- round(N[t - 1] + r * N[t-1] * (1 - N[t-1]/K))
N_exact[t] <- (N_exact[t - 1] + r * N_exact[t-1] * (1 - N_exact[t-1]/K))
N2_exact[t] <- (N2_exact[t - 1] + r * N2_exact[t-1] * (1 - N2_exact[t-1]/K))
}
lines(N_exact,N2_exact,ylim = c(0,4000),xlim =c(0,4000), col = 'red')
N <- c(1)
N_exact <- c(1)
N2_exact <- c(1.0001)
r <- 2.9
K <- 2000
tmax <- 3000
for(t in 2:tmax){
N[t] <- round(N[t - 1] + r * N[t-1] * (1 - N[t-1]/K))
N_exact[t] <- (N_exact[t - 1] + r * N_exact[t-1] * (1 - N_exact[t-1]/K))
N2_exact[t] <- (N2_exact[t - 1] + r * N2_exact[t-1] * (1 - N2_exact[t-1]/K))
}
lines(N_exact,N2_exact,ylim = c(0,4000),xlim =c(0,4000), col = 'blue')
N <- c(1)
N_exact <- c(1)
N2_exact <- c(1.0001)
r <- 2.9
K <- 2000
tmax <- 2000
for(t in 2:tmax){
N[t] <- round(N[t - 1] + r * N[t-1] * (1 - N[t-1]/K))
N_exact[t] <- (N_exact[t - 1] + r * N_exact[t-1] * (1 - N_exact[t-1]/K))
N2_exact[t] <- (N2_exact[t - 1] + r * N2_exact[t-1] * (1 - N2_exact[t-1]/K))
}
lines(N_exact,N2_exact,ylim = c(0,4000),xlim =c(0,4000), col = 'red')
N <- c(1)
N_exact <- c(1)
N2_exact <- c(1.0001)
r <- 2.9
K <- 3000
tmax <- 2000
for(t in 2:tmax){
N[t] <- round(N[t - 1] + r * N[t-1] * (1 - N[t-1]/K))
N_exact[t] <- (N_exact[t - 1] + r * N_exact[t-1] * (1 - N_exact[t-1]/K))
N2_exact[t] <- (N2_exact[t - 1] + r * N2_exact[t-1] * (1 - N2_exact[t-1]/K))
}
lines(N_exact,N2_exact,ylim = c(0,4000),xlim =c(0,4000), col = 'blue')
setwd("/Volumes/cobey/mvieira/evolution_of_mutability/analyses/equilibrium_mutability")
results <- read.csv('equilibrium_mutability.csv', header = T)
results <- read.csv('equilibrium_mutability.csv', header = T)
results
results <- read.csv('equilibrium_mutability.csv', header = T)
plot(results$S5F_mutability~results$generation)
results <- read.csv('equilibrium_mutability.csv', header = T)
points(results$S5F_mutability~results$generation, col = 'red')
results <- read.csv('equilibrium_mutability.csv', header = T)
points(results$S5F_mutability~results$generation, col = 'blue')
results <- read.csv('equilibrium_mutability.csv', header = T)
plot(results$S5F_mutability~results$generation)
plot(results$S5F_mutability[1:2000]~results$generation[1:2000])
results <- read.csv('equilibrium_mutability.csv', header = T)
results <- read.csv('../../results/equilibrium_mutability/equilibrium_mutability.csv', header = T)
results
setwd("/Volumes/cobey/mvieira/evolution_of_mutability/figure_scripts")
source('ggplot_parameters.R')
library(cowplot)
source('ggplot_parameters.R')
results <- read.csv('../../results/equilibrium_mutability/equilibrium_mutability.csv', header = T)
results <- read.csv('../results/equilibrium_mutability/equilibrium_mutability.csv', header = T)
names(results)
ggplot(results, aes(x = generation, y = S5F_mutability, colour = initial_mutability)) +
geom_point() + ggplot_theme
ggplot(results, aes(x = generation, y = S5F_mutability, colour = initial_mutability)) +
geom_point() + ggplot_theme + xlim(0,2000)
results[results$generation == 0 & results$initial_mutability == low,]
results[results$generation == 0 & results$initial_mutability == "low",]
ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability, group = replicate_trajectory)) +
geom_line() + ggplot_theme + xlim(0,2000)
ggplot(subset(results, replicate_trajectory == 1), aes(x = generation, y = S5F_mutability,
colour = initial_mutability, group = replicate_trajectory)) +
geom_line() + ggplot_theme + xlim(0,2000)
ggplot(subset(results, replicate_trajectory == 1), aes(x = generation, y = S5F_mutability,
colour = initial_mutability, group = replicate_trajectory)) +
geom_line() + ggplot_theme + xlim(0,500)
ggplot(subset(results, replicate_trajectory == 1), aes(x = generation, y = S5F_mutability,
colour = initial_mutability) +
geom_line() + ggplot_theme + xlim(0,500)
ggplot(subset(results, replicate_trajectory == 1), aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) +
geom_line() + ggplot_theme + xlim(0,500)
ggplot(subset(results, replicate_trajectory == 1), aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) +
geom_line() + ggplot_theme + xlim(0,100)
ggplot(subset(results), aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) +
geom_line() + ggplot_theme + xlim(0,100)
unique(results$replicate_trajectory)
ggplot(subset(results, initial_mutability = 'low'),
aes(x = generation, y = S5F_mutability))
+ geom_point()
ggplot(subset(results, initial_mutability = 'low'),
aes(x = generation, y = S5F_mutability)) + geom_point()
ggplot(subset(results, initial_mutability == 'low'),
aes(x = generation, y = S5F_mutability)) + geom_point()
ggplot(subset(results, initial_mutability == 'low'),
aes(x = generation, y = S5F_mutability)) + geom_line(aes(group = replicate_trajectory))
ggplot(subset(results, initial_mutability == 'low'),
aes(x = generation, y = S5F_mutability)) + geom_line(aes(colour = replicate_trajectory))
results <- read.csv('../results/equilibrium_mutability/equilibrium_mutability.csv', header = T)
results$replicate_trajectory <- factor(results$replicate_trajectory)
ggplot(subset(results, initial_mutability == 'low'),
aes(x = generation, y = S5F_mutability)) + geom_line(aes(colour = replicate_trajectory))
ggplot(subset(results, initial_mutability == 'low'),
aes(x = generation, y = S5F_mutability)) + geom_line(aes(group = replicate_trajectory))
ggplot(subset(results),
aes(x = generation, y = S5F_mutability, colour = initial_mutability)) + geom_line(aes(group = replicate_trajectory))
ggplot(subset(results),
aes(x = generation, y = S5F_mutability, colour = initial_mutability)) + geom_line(aes(group = replicate_trajectory)) +
xlim(0,50)
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability))
base_pl
rep <- 0
results_subset <- results[results$replicate_trajectory == rep]
results_subset <- results[results$replicate_trajectory == rep,]
base_pl + geom_line(results_subset)
base_pl + geom_line(data=results_subset)
rep <- 1
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
base_pl
rep <- 0
results_subset <- results[results$replicate_trajectory == rep,]
base_pl + geom_line(data=results_subset)
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) + ylim(0,50)
for(rep in unique(results$replicate_trajectory)){
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
}
base_pl
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) + xlim(0,50)
for(rep in unique(results$replicate_trajectory)){
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
}
base_pl
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) + xlim(0,100)
for(rep in unique(results$replicate_trajectory)){
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
}
base_pl
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) + xlim(0,200)
for(rep in unique(results$replicate_trajectory)){
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
}
base_pl
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) + xlim(0,200)
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
base_pl
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) + xlim(0,200)
for(rep in unique(results$replicate_trajectory)[0:5]){
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
}
base_pl
for(rep in unique(results$replicate_trajectory)[5:10]){
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
}
base_pl
results <- read.csv('../results/equilibrium_mutability/equilibrium_mutability.csv', header = T)
results$replicate_trajectory <- factor(results$replicate_trajectory)
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) + xlim(0,1000)
for(rep in unique(results$replicate_trajectory)[5:10]){
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
}
base_pl
base_pl + scale_color_brewer(palette = 1)
scale_color_brewer()
?scale_color_brewer
base_pl + scale_color_brewer(type = 'qual',palette = 1)
?scale_color_discrete
?scale_color_manual
base_pl + scale_color_manual(values = c('firebrick1','royalblue1'))
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) + xlim(0,5000)
for(rep in unique(results$replicate_trajectory)[5:10]){
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
}
base_pl <- base_pl + scale_color_manual(values = c('firebrick1','royalblue1'))
base_pl
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) + xlim(0,500)
for(rep in unique(results$replicate_trajectory)[5:10]){
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
}
base_pl <- base_pl + scale_color_manual(values = c('firebrick1','royalblue1'))
base_pl
results$initial_mutability[results$generation==0]
results$S5F_mutability[results$generation==0])
results$S5F_mutability[results$generation==0]
results$S5F_mutability[results$generation==0 & results$initial_mutability == 'low']
results$S5F_mutability[results$generation==0 &
results$initial_mutability == 'low'][0]
results$S5F_mutability[results$generation==0 &
results$initial_mutability == 'low'][0]
base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'low'][0]),
colour = 'royalblue1')
base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'low'][0]),
colour = 'royalblue1', aes(x=x,y=y))
base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'low'][1]),
colour = 'royalblue1', aes(x=x,y=y))
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'low'][1]),
colour = 'royalblue1', aes(x=x,y=y), size = 2)
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'high'][1]),
colour = 'firebrick1', aes(x=x,y=y), size = 2)
base_pl
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) + xlim(0,1000)
for(rep in unique(results$replicate_trajectory)[5:10]){
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
}
base_pl <- base_pl + scale_color_manual(values = c('firebrick1','royalblue1'))
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'low'][1]),
colour = 'royalblue1', aes(x=x,y=y), size = 2)
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'high'][1]),
colour = 'firebrick1', aes(x=x,y=y), size = 2)
base_pl
library(cowplot)
source('ggplot_parameters.R')
results <- read.csv('../results/equilibrium_mutability/equilibrium_mutability.csv', header = T)
results$replicate_trajectory <- factor(results$replicate_trajectory)
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) + xlim(0,500)
for(rep in unique(results$replicate_trajectory)[5:10]){
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
}
base_pl <- base_pl + scale_color_manual(values = c('firebrick1','royalblue1'))
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'low'][1]),
colour = 'royalblue1', aes(x=x,y=y), size = 2)
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'high'][1]),
colour = 'firebrick1', aes(x=x,y=y), size = 2)
base_pl
results$S5F_mutability[results$generation == 1,]
results$S5F_mutability[results$generation == 1]
results$S5F_mutability[results$generation == 1 & results$initial_mutability == 'low']
results$S5F_mutability[results$generation == 1 & results$initial_mutability == 'high']
results$S5F_mutability[results$generation == 0 & results$initial_mutability == 'high']
library(cowplot)
source('ggplot_parameters.R')
results <- read.csv('../results/equilibrium_mutability/equilibrium_mutability.csv', header = T)
results$replicate_trajectory <- factor(results$replicate_trajectory)
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) + xlim(0,500)
for(rep in unique(results$replicate_trajectory)[5:10]){
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
}
base_pl <- base_pl + scale_color_manual(values = c('firebrick1','royalblue1'))
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'low'][1]),
colour = 'royalblue1', aes(x=x,y=y), size = 2)
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'high'][1]),
colour = 'firebrick1', aes(x=x,y=y), size = 2)
base_pl <- base_pl + xlab('Generation', ylab = 'S5F mutability')
pdf('mutability_equilibrium.pdf',height = 7, width = 7)
plot(base_pl)
dev.off()
library(cowplot)
source('ggplot_parameters.R')
results <- read.csv('../results/equilibrium_mutability/equilibrium_mutability.csv', header = T)
results$replicate_trajectory <- factor(results$replicate_trajectory)
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) + xlim(0,500)
for(rep in unique(results$replicate_trajectory)[5:10]){
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
}
base_pl <- base_pl + scale_color_manual(values = c('firebrick1','royalblue1'))
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'low'][1]),
colour = 'royalblue1', aes(x=x,y=y), size = 2)
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'high'][1]),
colour = 'firebrick1', aes(x=x,y=y), size = 2)
base_pl <- base_pl + xlab('Generation') + ylab('S5F mutability')
pdf('mutability_equilibrium.pdf',height = 7, width = 7)
plot(base_pl)
dev.off()
base_pl + theme(legend.position = 'top')
base_pl + scale_color_manual(name = 'Initial mutability',
values = c('firebrick1','royalblue1'))
library(cowplot)
source('ggplot_parameters.R')
results <- read.csv('../results/equilibrium_mutability/equilibrium_mutability.csv', header = T)
results$replicate_trajectory <- factor(results$replicate_trajectory)
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) + xlim(0,500)
for(rep in unique(results$replicate_trajectory)[5:10]){
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
}
base_pl <- base_pl + scale_color_manual(name = 'Initial mutability',
values = c('firebrick1','royalblue1'))
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'low'][1]),
colour = 'royalblue1', aes(x=x,y=y), size = 2)
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'high'][1]),
colour = 'firebrick1', aes(x=x,y=y), size = 2)
base_pl <- base_pl + xlab('Generation') + ylab('S5F mutability')
base_pl <- base_pl + theme(legend.position = 'top')
pdf('mutability_equilibrium.pdf',height = 7, width = 10)
plot(base_pl)
dev.off()
library(cowplot)
source('ggplot_parameters.R')
results <- read.csv('../results/equilibrium_mutability/equilibrium_mutability.csv', header = T)
results$replicate_trajectory <- factor(results$replicate_trajectory)
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) + xlim(0,500)
for(rep in unique(results$replicate_trajectory)[5:10]){
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
}
base_pl <- base_pl + scale_color_manual(name = 'Initial mutability',
values = c('firebrick1','royalblue1'))
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'low'][1]),
colour = 'royalblue1', aes(x=x,y=y), size = 2)
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'high'][1]),
colour = 'firebrick1', aes(x=x,y=y), size = 2)
base_pl <- base_pl + xlab('Generation') + ylab('S5F mutability')
base_pl <- base_pl + theme(legend.position = 'top')
pdf('mutability_equilibrium.pdf',height = 7, width = 8)
plot(base_pl)
dev.off()
library(cowplot)
source('ggplot_parameters.R')
results <- read.csv('../results/equilibrium_mutability/equilibrium_mutability.csv', header = T)
results$replicate_trajectory <- factor(results$replicate_trajectory)
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) + xlim(0,500)
for(rep in unique(results$replicate_trajectory)[5:10]){
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
}
base_pl <- base_pl + scale_color_manual(name = 'Initial mutability',
values = c('firebrick1','royalblue1'))
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'low'][1]),
colour = 'royalblue1', aes(x=x,y=y), size = 2)
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'high'][1]),
colour = 'firebrick1', aes(x=x,y=y), size = 2)
base_pl <- base_pl + xlab('Generation') + ylab('S5F mutability')
base_pl <- base_pl + theme(legend.position = 'top')
pdf('mutability_equilibrium.pdf',height = 7, width = 7)
plot(base_pl)
dev.off()
base_pl <- ggplot(results, aes(x = generation, y = S5F_mutability,
colour = initial_mutability)) + xlim(0,5000)
for(rep in unique(results$replicate_trajectory)[5:10]){
results_subset <- results[results$replicate_trajectory == rep,]
base_pl <- base_pl + geom_line(data=results_subset)
}
base_pl <- base_pl + scale_color_manual(name = 'Initial mutability',
values = c('firebrick1','royalblue1'))
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'low'][1]),
colour = 'royalblue1', aes(x=x,y=y), size = 2)
base_pl <- base_pl + geom_point(data = data.frame(x=0,
y = results$S5F_mutability[results$generation==0 & results$initial_mutability == 'high'][1]),
colour = 'firebrick1', aes(x=x,y=y), size = 2)
base_pl <- base_pl + xlab('Generation') + ylab('S5F mutability')
base_pl <- base_pl + theme(legend.position = 'top')
base_pl
